blueprint:
  name: Lutron Pico Paddle - Light with Brightness Control
  description: |
    This automation allows for controlling one or more light entities with a Lutron Paddle Pico (PJ2-1P-GXX).
    A short press will toggle the light on/off, while a long press will gradually adjust brightness.

  domain: automation

  input:
    pico_remote:
      name: Pico Remote
      description: "Select the Pico remote to configure:"
      selector:
        device:
          filter:
            model: PJ2-1P-GXX (PaddleSwitchPico)
    entity:
      name: Light Entity(ies)
      description: "Light entity to control."
      selector:
        entity:
          filter:
            domain: light
          multiple: true

variables:
  long_press_threshold: 0.4 # Adjust this for how long the hold duration should be

trigger:
  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: "Button 0"
    id: on_pressed

  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: release
    subtype: "Button 0"
    id: on_released

  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: "Button 2"
    id: off_pressed

  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: release
    subtype: "Button 2"
    id: off_released

action:
  - choose:
      # Handle ON Button Pressed
      - conditions:
          - condition: trigger
            id: on_pressed
        sequence:
          - variables:
              pressed_time: "{{ now().timestamp() }}" # Capture press time

      # Handle OFF Button Pressed
      - conditions:
          - condition: trigger
            id: off_pressed
        sequence:
          - variables:
              pressed_time: "{{ now().timestamp() }}" # Capture press time

      # Handle ON Button Released
      - conditions:
          - condition: trigger
            id: on_released
        sequence:
          - variables:
              duration: "{{ now().timestamp() - pressed_time }}" # Calculate press duration
          - choose:
              - conditions: "{{ duration < long_press_threshold }}" # Short press
                sequence:
                  - service: light.toggle
                    target:
                      entity_id: !input entity
              - conditions: [] # Long press
                sequence:
                  - repeat:
                      sequence:
                        - service: light.turn_on
                          target:
                            entity_id: !input entity
                          data:
                            brightness_step_pct: 10
                        - delay:
                            milliseconds: 500
                      until:
                        - condition: trigger
                          id: on_released

      # Handle OFF Button Released
      - conditions:
          - condition: trigger
            id: off_released
        sequence:
          - variables:
              duration: "{{ now().timestamp() - pressed_time }}" # Calculate press duration
          - choose:
              - conditions: "{{ duration < long_press_threshold }}" # Short press
                sequence:
                  - service: light.toggle
                    target:
                      entity_id: !input entity
              - conditions: [] # Long press
                sequence:
                  - repeat:
                      sequence:
                        - service: light.turn_on
                          target:
                            entity_id: !input entity
                          data:
                            brightness_step_pct: -10
                        - delay:
                            milliseconds: 500
                      until:
                        - condition: trigger
                          id: off_released

mode: restart
